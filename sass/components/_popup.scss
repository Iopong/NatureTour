/*
========================================
********** POPUP FILE **************
========================================

*/

.popup {
    //Overlay a transparent view over the page.
    position: fixed;
    height: 100vh;
    width: 100%;
    top: 0;
    left: 0;
    z-index: 2500;
    background-color: rgba($color-black, .8);
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    //This is a tutorial on how to use
    //The @support property. Essentially
    //If a property is supported use the property
    //This process is called graceful degredation
    //This blurs the background. You can use brightness
    //And a bunch of other features. 
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    background-color: rgba($color-black, .3);

    @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        background-color: rgba($color-black, .3);
    }



    // display:none; we cannot animate with display none.
    &__content {
        @include absCenter;
        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
        display: table; //display it as a table so that they're placed side by side
        overflow: hidden; //So that the image overflow is not shown
        opacity: 0;
        //Remember that we cannot have two transform properities one overrides the other.
        //The best way to do would be to translate it, and then scale. 
        transform: translate(-50%, -50%) scale(.25);
        transition: all .4s .2s; //all, how long, and delay.

        @include respond(tab-port) {
            display: block;
        }
    }

    &__left {
        width: 33.333333%;
        //We use this property instead of using float: left
        //Because we want to the left and right side to be
        //Of the same length. Float would not enable us to 
        //Position the content within the rows of the table. 
        display: table-cell;

        @include respond(tab-port) {
            width: 100%;
            display: inline-block;
        }
    }

    &__right {
        width: 66.6666667%;
        display: table-cell;
        vertical-align: middle; //There is top, middle, bottom. we're faking a table
        padding: 3rem 5rem;

        @include respond(tab-port) {
            display: inherit;
            width: 100%;
        }
    }

    &__img {
        display: block;
        width: 100%;

        @include respond(tab-port) {
            float: left;
            width: 50%;
            height: 20rem;
        }
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        -moz-column-gap: 4rem; //1em = 14pxspace between column
        -moz-column-rule: 1px solid $color-grey-light-2;

        //Column is a new property of css
        //Works on most browsers.
        column-count: 2;
        column-gap: 4rem; //1em = 14pxspace between column
        column-rule: 1px solid $color-grey-light-2;

        //We want our hyphens to be set to auto
        //Remember to set the <html lang=en> is preset.
        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto; 

        @include respond(tab-port) {
            column-count: unset;
            column-gap: 0; //1em = 14pxspace between column
            column-rule: none;
        }

    }

    &:target {
        //Pseudo element when the target is selected
        opacity: 1;
        visibility: visible;
    }

    &:target &__content {
        //When it becomes a target style it's contents
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    &__close {
        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            line-height: 1; //There is a predefined line height so change it.
        }

        &:hover {
            color: $color-primary;
        }
    }
}